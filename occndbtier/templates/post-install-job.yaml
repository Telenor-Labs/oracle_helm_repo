{{ $mgmReplicaCount :=  .Values.global.mgmReplicaCount | int }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-post-install-hook"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-post-install-hook"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    {{- if .Values.mgm.annotations }}
      annotations:
        {{- range .Values.mgm.annotations }}
        {{ toYaml . }}
        {{- end }}
    {{- end }}
    spec:
    {{- if (.Values.global.serviceAccountForUpgrade.name | or .Values.global.serviceAccountForUpgrade.create) }}
      serviceAccountName: {{ template "cndbtier.upgrade.serviceaccount" . }}
    {{- else if or (ne .Values.global.serviceAccount.name "") (.Values.global.serviceAccount.create) }}
      serviceAccountName: {{ template "cndbtier.serviceaccount" . }}
    {{- end }}
      securityContext:
        runAsUser: 27
        runAsGroup: 27
      restartPolicy: Never
      containers:
      - name: "{{ .Release.Name }}-post-install-job"
        {{- if ne .Values.global.repository "" }}
        image: {{ .Values.global.repository }}/{{ .Values.postInstallJob.image.repository }}:{{ .Values.postInstallJob.image.tag }}
        {{- else }}
        image: {{ .Values.postInstallJob.image.repository }}:{{ .Values.postInstallJob.image.tag }}
        {{- end }}
        imagePullPolicy: {{ .Values.postInstallJob.image.pullPolicy }}
        env:
          - name: OCCNE_NAMESPACE
            value: {{ $.Values.global.namespace }}
        command:
          - /bin/bash
          - -ec
          - |
            {{- if .Values.global.useasm }}
            trap "curl --max-time 2 -s -f -XPOST {{ .Values.global.istioSidecarQuitUrl }}" EXIT
            while ! curl -s -f {{ .Values.global.istioSidecarReadyUrl }}; do sleep 1; done
            sleep 2
            {{- end }}
            {{- .Files.Get "files/hooks.sh" | nindent 12 }}
            echo "INFO: $($LOG_DATE_CMD) - Starting post-install hook..."
            {{- if (.Values.global.serviceAccountForUpgrade.name | or .Values.global.serviceAccountForUpgrade.create) }}
            NDB_STS_NAME="{{ template "ndb.ndbstsname" . }}"
            API_STS_NAME="{{ template "api.apistsname" . }}"
            APP_STS_NAME="{{ template "ndbapp.apistsname" . }}"
            main --post-install
            {{- end }}
            echo "INFO: $($LOG_DATE_CMD) - Post-install hook finished"
        resources: {{- toYaml .Values.postInstallJob.resources | nindent 10 }}
