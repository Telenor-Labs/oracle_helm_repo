1. Get the application URL by running these commands:
{{ range $i, $dbReplSvcDeploy := .Values.dbreplsvcdeployments }}
{{ $dbReplSvcDict := dict "Values" $.Values  "Chart" $.Chart "dbReplSvcDeploy" $dbReplSvcDeploy "Release" $.Release }}
{{ if $dbReplSvcDeploy.enabled }}
{{- if contains "NodePort" $dbReplSvcDeploy.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "db-replication-svc.fullname" ($dbReplSvcDict) }})
  export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" $dbReplSvcDeploy.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ template "db-replication-svc.fullname" ($dbReplSvcDict) }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ template "db-replication-svc.fullname" ($dbReplSvcDict) }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ $dbReplSvcDeploy.service.port }}
{{- else if contains "ClusterIP" $dbReplSvcDeploy.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app={{ template "db-replication-svc.name" ($dbReplSvcDict) }},release={{ $.Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:80
{{- end }}
{{- end }}
{{- end }}
