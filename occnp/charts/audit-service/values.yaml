global:
  auditServiceEnable: true
  imagePullPolicy: IfNotPresent
  dockerRegistry: docker-registry.openstack.in.oracle.com:5000
  dbCredSecretName: ''
  logStorage: 0 #default calculated value 70
  crictlStorage: 0 #default calculated value 1
  envJaegerAgentHost: ''
  envJaegerAgentPort: 6831
  envMysqlHost: ''
  envMysqlPort: ''
  envDbMaxLifeTime: 540000
  envDbIdleTimeout: 540000
  serviceMeshEnabled: 'false'
  istioSidecarQuitUrl: http://127.0.0.1:15020/quitquitquit
  istioSidecarReadyUrl: http://127.0.0.1:15020/healthz/ready
  servicePorts:
      auditServiceHttp: 5807
  containerPorts:
      monitoringHttp: 9000
      auditServiceHttp: 8081
      javaDebugger: 5801
  k8sResource:
    container:
      prefix:
      suffix:
  customExtension:
    allResources:
      labels: {}
      annotations: {}

    lbServices:
      labels: {}
      annotations: {}
    lbDeployments:
      labels: {}
      annotations: {}

    nonlbServices:
      labels: {}
      annotations: {}
    nonlbDeployments:
      labels: {}
      annotations: {}
  cncMetricsName: cnc-metrics
  exposeObservabilityAtService: false

image: occnp/oc-audit
imageTag: 22.1.0
envMysqlDatabase: occnp_audit_service
envLoggingLevelApp: WARN

replicas: 1
nodeSelectorEnabled: false
nodeSelectorKey: zone
nodeSelectorValue: app
http2Enabled: 'true'
smConnectorHttp2Enabled: 'true'
serverPort: 8081
serverHttpPort: 8082
appName: ocpm
useLbLabelsAndAnnotations: false
envJaegerSamplerParam: '1'
envJaegerSamplerType: ratelimiting
hookRestartPolicy: OnFailure
notifyThreadPoolCount: 5


# No records to be fetched in batch from database
batchSize: 1000

#Delay in DQ query between two consecutive queries
dbQueryDelayInMillis: 5

#Size of the Queue for stale records
recordsQueueCapacity: 5000

#Frequecy at which the records count is calculated in millis
recordsCountFrequecy: 60000


# The amount of time in second a connection can sit idle without processing a request,
# before it is closed by the server. -1 means no limit.
noRequestTimeOut: -1

# A grace interval (in seconds) after the expiry of Maximum TTL (Session Age)
# that is given to the service to delete an expired record gracefully.
# On expiry of this grace interval, the record will be forcefully deleted by Audit service.
maxTtlForceInterval: 3600


timers:
  configConnectionTimeout: 5000
  configReadTimeout: 1000

resources:
  limits:
    ephemeralStorage: 1Gi
    cpu: 2
    memory: 1Gi
  requests:
    cpu: 1
    memory: 1Gi

readinessProbe:
  initialDelaySeconds: 60
  timeoutSeconds: 3
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

livenessProbe:
  initialDelaySeconds: 60
  timeoutSeconds: 3
  periodSeconds: 15
  successThreshold: 1
  failureThreshold: 3

service:
  type: ClusterIP
  port: 0
  customExtension:
    labels: {}
    annotations: {}

deployment:
  customExtension:
    labels: {}
    annotations: {}

dependenciesLogging:
  - name: logging.level.org.springframework
    value: WARN
  - name: logging.level.org.hibernate
    value: WARN
  - name: logging.level.io.undertow
    value: WARN
  - name: logging.level.io.jaegertracing
    value: WARN
  - name: logging.level.com.zaxxer.hikari
    value: WARN

logging:
  burst:
    rate: 750
    max: 3000
  consoleFormat: jsonConsole
  locationInfo: false

extraContainers: USE_GLOBAL_VALUE

probes:
  liveness:
    monitorInterval: 5
    features:
      deadlockDetection: true

#Db hook Configuration
dbConfig:
  dbEngine: InnoDB