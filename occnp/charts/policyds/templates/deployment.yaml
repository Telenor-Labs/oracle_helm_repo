{{- if $.Values.global.policydsEnable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{- include "annotations.deployments" . }}
  labels:
    {{- include "labels.deployments" . }}
    io.kompose.service: {{ template "ocpm-policyds-deployment-name" . }}
  name: {{ template "ocpm-policyds-deployment-name" . }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      io.kompose.service: {{ template "ocpm-policyds-deployment-name" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
  template:
    metadata:
      annotations:
        {{- include "annotations.deployments" . | indent 4 }}
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: {{ .Values.global.containerPorts.monitoringHttp | quote }}
        prometheus.io/scrape: 'true'
      labels:
        {{- include "labels.deployments" . | indent 4 }}
        io.kompose.service: {{ template "ocpm-policyds-deployment-name" . }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: DEPLOY_SERVICE_NAMESPACE
          value: {{ .Release.Name | quote }}
        - name: DEPLOY_SERVICE_NAME
          value: {{ template "service-name-policy-ds" . }}
        - name: CFG_SERVER_READINESS_URL
          value: "http://{{ template "service-name-config-server" . }}:{{ .Values.global.servicePorts.configServerHttp }}/topics"
        - name: LOGGING_LEVEL_ROOT
          value: {{ .Values.envLoggingLevelRoot | quote }}
        - name: APPLICATION_NAME
          value: {{ .Values.appName | quote }}
        - name: MICROSERVICE_NAME
          value: {{ template "policyds.fullname" .}}
        - name: ENGINEERING_VERSION
          value: {{ .Chart.Version | quote }}
        - name: MARKETING_VERSION
          value: {{ .Chart.AppVersion | quote }}
        - name: LOG4J2_BURST_RATE
          value: {{ .Values.logging.burst.rate | quote }}
        - name: LOG4J2_BURST_MAX
          value: {{ .Values.logging.burst.max | quote }}
        - name: LOG4J2_LOCATION_INFO
          value: {{ .Values.logging.locationInfo | quote }}
        - name: LOG4J2_CONSOLE_FORMAT
          value: {{ .Values.logging.consoleFormat | quote }}
        - name: CFG_SERVER_HOST
          value: {{ template "service-name-config-server" . }}
        - name: CFG_SERVER_PORT
          value: {{ .Values.global.servicePorts.configServerHttp | quote }}
        - name: CONNECT_RETRY_MAX
          value: {{ .Values.global.configFetch.maxRetries | quote }}
        - name: CONNECT_RETRY_INTERVAL
          value: {{ .Values.global.configFetch.retryInterval | quote }}
        - name: SERVICE_MESH_CHECK
          value: {{ .Values.global.serviceMeshEnabled | quote }}         
        - name: ISTIO_SIDECAR_QUIT_URL
          value: {{ .Values.global.istioSidecarQuitUrl }}
        - name: ISTIO_SIDECAR_READY_URL
          value: {{ .Values.global.istioSidecarReadyUrl }}
        - name: NF_INSTANCE_ID
          value: {{ .Values.global.nfInstanceId | quote }}
        - name: DB_URL
          value: "{{ template "db-uri-scheme" . }}://{{ template "db-host-and-port" . }}/{{ .Values.envMysqlDatabase }}?useUnicode=true&characterEncoding=utf-8&useSSL=false&socketTimeout={{ .Values.global.mySql.connection.socketTimeout }}{{ template "db-url-load-balance-config" . }}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.dbCredSecretName }}
              key: mysql-password
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.dbCredSecretName }}
              key: mysql-username
        - name: pcrf.service.st.url
          value: "http://{{ template "service-name-soap-connector" . }}:{{ .Values.global.servicePorts.soapConnectorHttp }}/CancelPolicyAdjustment/"
        - name:  pcrf.service.st.pa.listPA
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/policyAdjustment/subscriberId"
        - name: pcrf.service.st.pa.cancelPA
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/policyAdjustment/subscriberId"
        - name: pcrf.service.st.pa.addPA
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/policyAdjustment"

        - name: pcrf.service.wesp.subscribeUrl
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/PCRFWESPEAI/"
        - name: pcrf.service.wesp.queryUrl
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/PCRFWESPEAI/status/"
        - name: pcrf.service.pdst.url
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/PCRFDataInfo/getSubForUserIP/"
        - name: ldap.service.url
          value: "http://{{ template "service-name-ldap-gateway" . }}:{{ .Values.global.servicePorts.ldapGatewayHttp }}/ldapGateway/ldap-data/"
        - name: pre.service.url
          value: "http://{{ template "service-name-pre" . }}:{{ .Values.global.servicePorts.preServiceHttp }}/v1/policy/engine/pds"
        - name: pcrf.service.url
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/pcrf"
        - name: userservice.apiroot
          value: "http://{{ template "service-name-pcf-user" . }}:{{ .Values.global.servicePorts.pcfUserServiceHttp }}/userservice/user-data"
        - name: udrconnector.subscription.url
          value: "http://{{ template "service-name-udr-connector" . }}:{{ .Values.global.servicePorts.udrConnectorHttp }}/udrservice/subs-to-notify"
        - name: udrconnectorurl.apiroot
          value: "http://{{ template "service-name-udr-connector" . }}:{{ .Values.global.servicePorts.udrConnectorHttp }}/userservice/user-data"
        - name: chfconnector.apiroot
          value: "http://{{ template "service-name-chf-connector" . }}:{{ .Values.global.servicePorts.chfConnectorHttp }}/userservice/user-data"
        - name: spendinglimit.apiroot
          value: "http://{{ template "service-name-chf-connector" . }}:{{ .Values.global.servicePorts.chfConnectorHttp }}/chfservice/spending-limit"
        - name: spendinglimit.unsubscription.url
          value: "http://{{ template "service-name-chf-connector" . }}:{{ .Values.global.servicePorts.chfConnectorHttp }}/chfservice/spending-limit/subscriptions"
        - name: chfservice.enable.spendinglimitapi
          value: {{ .Values.enableSpendingLimitApi | quote }}
        - name: diamconnector.apiroot
          value: "http://{{ template "service-name-diameter-connector" . }}:{{ .Values.global.servicePorts.diamConnectorHttp }}/diamconnector/ocs/user-data"
        - name: MONITORING_PORT
          value: {{ .Values.global.containerPorts.monitoringHttp | quote }}
        - name: SIGNALING_PORT
          value: {{ .Values.global.containerPorts.policydsHttp | quote }}
        - name: APP_SHUTDOWN_GRACE_PERIOD
          value: {{ .Values.global.shutdownGracePeriod.app | quote }}
        - name: SIGNALING_PORT_HTTPS
          value: {{ .Values.global.containerPorts.policydsHttps | quote }}
        - name: JAVA_DEBUGGER_PORT
          value: {{ .Values.global.containerPorts.javaDebugger | quote }}
        - name: HTTP2_ENABLED
          value: "true"
        - name: HTTP2_CLIENT_ENABLED
          value: "true"
        - name: ASYNCH_SUBSCRIPTION
          value: "false"
        - name: WEBCLIENT_TIMEOUT
          value: "5000"
        - name: DEADLOCK_DETECTION
          value: {{ .Values.probes.liveness.features.deadlockDetection | quote }}
        - name: LIVENESS_MONITOR_INTERVAL
          value: {{ .Values.probes.liveness.monitorInterval | quote }}
        - name: MAX_HTTP2_CLIENT_CONNECTIONS_PER_DESTINATION
          value: {{ .Values.maxHttp2ClientConnPerDestination | quote }}
        - name: HTTP_SERVER_CONNECTION_IDLE_TIMEOUT
          value: {{ .Values.httpServerConnectionIdleTimeout | quote }}
        - name: DATASOURCE_HIKARI_CONN_TIMEOUT
          value: {{ .Values.global.mySql.connection.connectionTimeout | quote }}
        - name: DATASOURCE_HIKARI_IDLE_TIMEOUT
          value: {{ .Values.global.mySql.connection.idleTimeout | quote }}
        - name: DATASOURCE_HIKARI_MAX_LIFETIME
          value: {{ .Values.global.mySql.connection.maxLifeTime | quote }}
        - name: DATASOURCE_HIKARI_CONN_VALIDATION_TIMEOUT
          value: {{ .Values.global.mySql.connection.validationTimeout | quote }}
        - name: smservice.notification.url
          value: "http://{{ template "service-name-pcf-sm" . }}:{{ .Values.global.servicePorts.pcfSmServiceHttp }}/npcf-smpolicycontrol/v1/sm-policies/{0}/notify"
        - name: binding.apiroot
          value: "http://{{ template "service-name-binding" . }}:{{ .Values.global.servicePorts.bindingHttp }}/binding/v1/dependentContextBinding/find/context-owner"
        - name: AMSERVICE_NOTIFICATION_URL
          value: "http://{{ template "service-name-pcf-am" . }}:{{ .Values.global.servicePorts.pcfAmServiceHttp }}/npcf-am-policy-control/v1/am-policies/{0}/notify"
        - name: AMSERVICE_TERMINATE_NOTIFICATION_URL
          value: "http://{{ template "service-name-pcf-am" . }}:{{ .Values.global.servicePorts.pcfAmServiceHttp }}/npcf-am-policy-control/v1/am-policies/{0}/notify"
        - name: UESERVICE_NOTIFICATION_URL
          value: "http://{{ template "service-name-pcf-ue" . }}:{{ .Values.global.servicePorts.pcfUeServiceHttp }}/npcf-ue-policy-control/v1/ue-policies/{0}/notify"
        - name: PCRFSERVICE_NOTIFICATION_URL
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/pcrf-core/{0}/notify"
        - name: SMSERVICE_NOTIFICATION_APIROOT
          value: "http://{{ template "service-name-pcf-sm" . }}:{{ .Values.global.servicePorts.pcfSmServiceHttp }}/"
        - name: AMSERVICE_NOTIFICATION_APIROOT
          value: "http://{{ template "service-name-pcf-am" . }}:{{ .Values.global.servicePorts.pcfAmServiceHttp }}/"
        - name: UESERVICE_NOTIFICATION_APIROOT
          value: "http://{{ template "service-name-pcf-ue" . }}:{{ .Values.global.servicePorts.pcfUeServiceHttp }}/"
        - name: PCRF_NOTIFICATION_APIROOT
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/"
        - name: AUDIT_NOTIFICATION_URL
          value: "http://{{ template "service-name-policy-ds" . }}:{{ .Values.global.servicePorts.policydsHttp }}/"
        - name: AUDIT_SVC_URL
          value: "http://{{ template "service-name-audit" . }}:{{ .Values.global.servicePorts.auditServiceHttp }}/"
        - name: SM_QUERY_SVC_URL
          value: "http://{{ template "service-name-query" . }}:{{ .Values.global.servicePorts.queryServiceHttp }}/ocpm/common/v1/sessiondata/smservice"
        - name: UE_QUERY_SVC_URL
          value: "http://{{ template "service-name-query" . }}:{{ .Values.global.servicePorts.queryServiceHttp }}/ocpm/common/v1/sessiondata/ueservice"
        - name: AM_SVC_URL
          value: "http://{{ template "service-name-pcf-am" . }}:{{ .Values.global.servicePorts.pcfAmServiceHttp }}/npcf-am-policy-control/v1/sessions"
        - name: PCRFCORE_SVC_URL
          value: "http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/pcrfSessionData"
        - name: AUDIT_REQUEST_DELAY
          value: {{ .Values.auditRequestDelay | quote }}
        - name: AUDIT_MAX_REQUESTS
          value: {{ .Values.auditMaxRequests | quote }}
        - name: JAEGER_AGENT_HOST
          value: {{ .Values.global.envJaegerAgentHost | quote }}
        - name: JAEGER_AGENT_PORT
          value: {{ .Values.global.envJaegerAgentPort | quote }}
        - name: JAEGER_SERVICE_NAME
          value: {{ template "ocpm-policyds-deployment-name" . }}
        - name: JAEGER_SAMPLER_PARAM
          value: {{ .Values.envJaegerSamplerParam | quote }}
        - name: JAEGER_SAMPLER_TYPE
          value: {{ .Values.envJaegerSamplerType | quote }}
        - name: PDS_DB_MIGRATION_FLAG
          value: {{ .Values.envPdsDbMigrationFlag | quote }}
        {{- if .Values.imageTag }}
        image: "{{ .Values.global.dockerRegistry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
        {{- else }}
        image: "{{ .Values.global.dockerRegistry }}/{{ .Values.image }}:{{ .Values.global.imageTag }}"
        {{- end }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        name: {{ template "container.fullname" . }}
        livenessProbe:
          httpGet:
            path: /actuator/liveness
            port: {{ .Values.global.containerPorts.monitoringHttp }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: {{ .Values.global.containerPorts.monitoringHttp }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        ports:
          - containerPort: {{ .Values.global.containerPorts.policydsHttp }}
            protocol: TCP 
          - containerPort: {{ .Values.global.containerPorts.policydsHttps }}
            protocol: TCP
          - name: {{ .Values.global.cncMetricsName  }}
            containerPort: {{ .Values.global.containerPorts.monitoringHttp }}
            protocol: TCP

        resources:
          limits:
            {{- if ne (add .Values.global.logStorage .Values.global.crictlStorage)  0 }}
            ephemeral-storage: {{ .Values.resources.limits.ephemeralStorage | quote }}
            {{- end }}
            cpu: {{ .Values.resources.limits.cpu | quote}}
            memory: {{ .Values.resources.limits.memory | quote}}
          requests:
            {{- if ne (add .Values.global.logStorage .Values.global.crictlStorage)  0 }}
            ephemeral-storage: {{ template "policyds-ephemeral-storage-request" .}}
            {{- end }}
            cpu: {{ .Values.resources.requests.cpu | quote}}
            memory: {{ .Values.resources.requests.memory | quote}}
    {{- include "extraContainers" . | nindent 6}}
    {{- if $.Values.nodeSelectorEnabled }}
      nodeSelector:
        {{ $.Values.nodeSelectorKey }}: {{ $.Values.nodeSelectorValue }}
    {{- end }}
    {{- if $.Values.global.serviceAccountName }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
    {{- else }}
      serviceAccountName: {{ template "ocnf.serviceaccount" . }}
    {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100 
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                  - {{ template "chart.fullname" .}} 
              topologyKey: "kubernetes.io/hostname"

      restartPolicy: Always
      schedulerName: default-scheduler
  {{- end }}
