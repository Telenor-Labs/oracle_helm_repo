apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{- include "annotations.deployments" . }}
  labels:
    {{- include "labels.deployments" . }}
    io.kompose.service: {{ template "ocpm-queryservice-deployment-name" . }}
  name: {{ template "ocpm-queryservice-deployment-name" . }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      io.kompose.service: {{ template "ocpm-queryservice-deployment-name" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "labels.deployments" . | indent 4 }}
        io.kompose.service: {{ template "ocpm-queryservice-deployment-name" . }}
      annotations:
        {{- include "annotations.deployments" . | indent 4 }}
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: {{ .Values.global.containerPorts.monitoringHttp | quote }}
        prometheus.io/scrape: 'true'
    spec:
      containers:
      - env:
        - name: LOGGING_LEVEL_APP
          value: {{ .Values.envLoggingLevelApp | quote }}
        - name: SIGNALING_PORT
          value: {{ .Values.global.containerPorts.queryServiceHttp | quote }}
        - name: MONITORING_PORT
          value: {{ .Values.global.containerPorts.monitoringHttp | quote }}
        - name: HTTP2_ENABLED
          value: {{ .Values.envHttp2Enabled | quote }}
        - name: CONFIG_CONNECT_TIMEOUT
          value: {{ .Values.timers.configConnectionTimeout | quote }}
        - name: CONFIG_READ_TIMEOUT
          value: {{ .Values.timers.configReadTimeout | quote }}
        - name: CONNECT_RETRY_MAX
          value: {{ .Values.global.configFetch.maxRetries | quote }}
        - name: CONNECT_RETRY_INTERVAL
          value: {{ .Values.global.configFetch.retryInterval | quote }}
        - name: JAEGER_AGENT_HOST
          value: {{ .Values.global.envJaegerAgentHost | quote }}
        - name: JAEGER_AGENT_PORT
          value: {{ .Values.global.envJaegerAgentPort | quote }}
        - name: JAEGER_SERVICE_NAME
          value: {{ template "ocpm-queryservice-deployment-name" . }}    
        - name: JAEGER_SAMPLER_PARAM
          value: {{ .Values.envJaegerSamplerParam | quote }}
        - name: JAEGER_SAMPLER_TYPE
          value: {{ .Values.envJaegerSamplerType | quote }}
        - name: DEADLOCK_DETECTION
          value: {{ .Values.probes.liveness.features.deadlockDetection | quote }}
        - name: LIVENESS_MONITOR_INTERVAL
          value: {{ .Values.probes.liveness.monitorInterval | quote }}
        - name: MYSQL_HOST
          value: {{ .Values.global.envMysqlHost | quote }}
        - name: MYSQL_PORT
          value: {{ .Values.global.envMysqlPort | quote }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.dbCredSecretName }}
              key: mysql-password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.dbCredSecretName }}
              key: mysql-username
        - name: DB_IDLE_TIMEOUT
          value: {{ .Values.global.envDbIdleTimeout | quote }}
        - name: DB_MAX_LIFETIME
          value: {{ .Values.global.envDbMaxLifeTime | quote }}
        - name: MYSQL_DATABASE_SM_SERVICE
          value: {{ .Values.envMysqlDatabaseSmService | quote }}
        - name: MYSQL_DATABASE_UE_SERVICE
          value: {{ .Values.envMysqlDatabaseUeService | quote }}
        - name: AMSERVICE_ENABLED
          value: {{ .Values.global.amServiceEnable | quote }}
        - name: SMSERVICE_ENABLED
          value: {{ .Values.global.smServiceEnable | quote }}
        - name: UESERVICE_ENABLED
          value: {{ .Values.global.ueServiceEnable | quote }}
        - name: BINDINGSERVICE_ENABLED
          value: {{ .Values.global.bindingSvcEnabled | quote }}
        - name: PCRFCORESERVICE_ENABLED
          value: {{ .Values.global.pcrfCoreEnable | quote }}
        - name: POLICYDSSERVICE_ENABLED
          value: {{ .Values.global.policydsEnable | quote }}
        - name: AMSERVICE_URL  
          value: http://{{ template "service-name-pcf-am" . }}:{{ .Values.global.servicePorts.pcfAmServiceHttp }}/npcf-am-policy-control/v1/sessions
        - name: BSFSERVICE_URL
          value: http://{{ template "service-name-bsf-management" . }}:{{ .Values.global.servicePorts.bsfManagementServiceHttp }}/oc-bsf-query/v1/pcfBindings
        - name: PCRFCORESERVICE_URL
          value: http://{{ template "service-name-pcrf-core" . }}:{{ .Values.global.servicePorts.pcrfCoreHttp }}/pcrfSessionData
        - name: BINDING_SVC_URL
          value: http://{{ template "service-name-binding" . }}:{{ .Values.global.servicePorts.bindingHttp }}/binding/v1
        - name: SMSERVICE_URL
          value: http://{{ template "service-name-pcf-sm" . }}:{{ .Values.global.servicePorts.pcfSmServiceHttp }}/npcf-smpolicycontrol/v1
        - name: UESERVICE_URL
          value: http://{{ template "service-name-pcf-ue" . }}:{{ .Values.global.servicePorts.pcfUeServiceHttp }}/npcf-ue-policy-control/v1
        - name: PASERVICE_URL
          value: http://{{ template "service-name-pcf-sm" . }}:{{ .Values.global.servicePorts.pcfSmServiceHttp }}/npcf-policyauthorization/v1
        - name: POLICYDS_SVC_URL
          value: "http://{{ template "service-name-policy-ds" . }}:{{ .Values.global.servicePorts.policydsHttp }}/pds/v2/user-data"
        - name: APPLICATION_NAME
          value: {{ .Values.appName | quote }}
        - name: MICROSERVICE_NAME
          value: {{ .Chart.Name | quote }}
        - name: ENGINEERING_VERSION
          value: {{ .Chart.Version | quote }}
        - name: MARKETING_VERSION
          value: {{ .Chart.AppVersion | quote }}
        {{- range $logger := .Values.dependenciesLogging }}
        - name: {{ $logger.name | quote }}
          value: {{ $logger.value | quote }}
        {{- end }}
        - name: LOG4J2_BURST_RATE
          value: {{ .Values.logging.burst.rate | quote }}
        - name: LOG4J2_BURST_MAX
          value: {{ .Values.logging.burst.max | quote }}
        - name: LOG4J2_LOCATION_INFO
          value: {{ .Values.logging.locationInfo | quote }}
        - name: LOG4J2_CONSOLE_FORMAT
          value: {{ .Values.logging.consoleFormat | quote }}
        - name: SERVICE_MESH_CHECK
          value: {{ .Values.global.serviceMeshEnabled | quote }}         
        - name: ISTIO_SIDECAR_READY_URL
          value: {{ .Values.global.istioSidecarReadyUrl }}
      {{- if .Values.imageTag }}
        image: "{{ .Values.global.dockerRegistry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
      {{- else }}
        image: "{{ .Values.global.dockerRegistry }}/{{ .Values.image }}:{{ .Values.global.imageTag }}"
      {{- end }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        name: {{ template "container.fullname" . }}
        livenessProbe:
          httpGet:
            path: /actuator/liveness
            port: {{ .Values.global.containerPorts.monitoringHttp }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: {{ .Values.global.containerPorts.monitoringHttp }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        ports:
          - containerPort: {{ .Values.global.containerPorts.queryServiceHttp }}
            protocol: TCP 
          - containerPort: {{ .Values.global.containerPorts.monitoringHttp }}
            protocol: TCP 
          - containerPort: {{ .Values.global.containerPorts.javaDebugger }}
            protocol: TCP 
          - name: {{ .Values.global.cncMetricsName  }}
            containerPort: {{ .Values.global.containerPorts.monitoringHttp }}
            protocol: TCP
        resources:
          limits:
            {{- if ne (add .Values.global.logStorage .Values.global.crictlStorage)  0 }}
            ephemeral-storage: {{ .Values.resources.limits.ephemeralStorage | quote }}
            {{- end }}
            cpu: {{ .Values.resources.limits.cpu | quote}}
            memory: {{ .Values.resources.limits.memory | quote}}
          requests:
            {{- if ne (add .Values.global.logStorage .Values.global.crictlStorage)  0 }}
            ephemeral-storage: {{ template "queryservice-ephemeral-storage-request" .}}
            {{- end }}
            cpu: {{ .Values.resources.requests.cpu | quote}}
            memory: {{ .Values.resources.requests.memory | quote}}
    {{- include "extraContainers" . | nindent 6}}
    {{- if $.Values.nodeSelectorEnabled }}
      nodeSelector:
        {{ $.Values.nodeSelectorKey }}: {{ $.Values.nodeSelectorValue }}
    {{- end }}
    {{- if $.Values.global.serviceAccountName }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
    {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100 
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                  - {{ template "chart.fullname" .}} 
              topologyKey: "kubernetes.io/hostname"

      restartPolicy: Always
      schedulerName: default-scheduler

